- model_class = Car
.page-header
  %h1= t '.title', :default => model_class.model_name.human.pluralize.titleize

  .row
    .col.s12
      .row
        .input-field.col.s12
          %i.material-icons.prefix textsms
          %input#autocomplete-input.autocomplete{:type => "text"}
          %label{:for => "autocomplete-input"} Autocomplete

%table.table.table-striped
  %thead
    %tr
      %th= model_class.human_attribute_name(:id)
      %th= model_class.human_attribute_name(:plate)
      %th= t '.actions', :default => t("helpers.actions")
  %tbody
    - @cars.each do |car|
      %tr
        %td= link_to car.id, car_path(car)
        %td= car.plate.upcase
        %td
          - if current_user.is_admin?
            = link_to t('.show', :default => t("helpers.links.show")),
              car_path(car), :class => 'btn btn-default btn-xs'
            = link_to t('.edit', :default => t("helpers.links.edit")),
              edit_car_path(car), :class => 'btn btn-default btn-xs'
            = link_to t('.destroy', :default => t("helpers.links.destroy")),
              car_path(car),
              :method => :delete,
              :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
              :class => 'btn btn-xs btn-danger'
  = will_paginate @cars

  :javascript
     $('input.autocomplete').autocomplete({
       data: {
         'Apple': null,
         "Microsoft": null,
         "Google": 'https://placehold.it/250x250'
       },
       limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
       onAutocomplete: function(val) {
         // Callback function when value is autcompleted.
       },
       minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
     });
